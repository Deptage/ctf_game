networks:
  home-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.0.0/16

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      home-network:
        ipv4_address: 10.10.0.2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - IPC_LOCK
      - DAC_OVERRIDE
      - SETGID
      - SETUID

  backend:
    build:
      context: ./home_screen/backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    secrets:
      - db_password
    networks:
      home-network:
        ipv4_address: 10.10.0.3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # for running other containers
      - type: bind
        source: ./aqua_messenger
        target: /aqua_messenger
      - type: bind
        source: ./bank_page
        target: /bank_page
      - type: bind
        source: ./company_page
        target: /company_page
      - type: bind
        source: ./forum
        target: /forum
    cap_drop:
      - ALL
    cap_add:
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    healthcheck:

      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://localhost:8080/ | grep -E '^(200|403|404)' || exit 1"]

      interval: 10s
      timeout: 5s
      retries: 5
    

  frontend:
    build:
      context: ./home_screen/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:8080"
    networks:
      home-network:
        ipv4_address: 10.10.0.4

    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/|| exit 1"]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5
    cap_drop:
      - ALL


  aqua_messenger_frontend:
    build:
      context: ./aqua_messenger/frontend
      dockerfile: Dockerfile
    ports:
      - "1111:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/|| exit 1"]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5
    cap_drop:
      - ALL


  bank_frontend:
    build:
      context: ./bank_page/frontend
      dockerfile: Dockerfile
    ports:
      - "2222:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/|| exit 1"]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5
    cap_drop:
      - ALL


  forum_frontend:
    build:
      context: ./forum/frontend
      dockerfile: Dockerfile
    ports:
      - "3333:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/|| exit 1"]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5
    cap_drop:
      - ALL


  company_frontend:
    build:
      context: ./company_page/frontend
      dockerfile: Dockerfile
    ports:
      - "4444:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/|| exit 1"]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5
    cap_drop:
      - ALL



volumes:
  pgdata:

secrets:
  db_password:
    file: ./home_db_password.txt
