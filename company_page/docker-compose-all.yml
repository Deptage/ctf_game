version: '3.8'

networks:
  company-network:
    driver: bridge
    ipam:
      config: []

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: inthehistoryofforevertherehasneverbeenamorecomplexpostgresqlpassword
    networks:
      - company-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - IPC_LOCK
      - DAC_OVERRIDE
      - SETGID
      - SETUID

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - FRONTEND_PORT=4444
      - INSTANCE_ID=${INSTANCE_ID}
    ports:
      - "${bPORT}:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - company-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://localhost:8080/ | grep -E '^(200|403|404)' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    cap_drop:
      - ALL

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4444:8080"
    networks:
      - company-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/|| exit 1"]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 5
